server:
  port: 8081
  servlet:
    context-path: /${spring.application.name}

spring:
  application:
    name: system
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}  # 默认本地环境
  cloud:
    nacos:
      username: ${NACOS_USER:nacos}
      password: ${NACOS_PASSWORD:nacospwd}
      discovery:
        enabled: true
        namespace: ${NACOS_NAMESPACE:}
        group: ${NACOS_GROUP:DEFAULT_GROUP}
        cluster-name: ${CLUSTER_NAME:default}
      config:
        enabled: true
        namespace: ${NACOS_NAMESPACE:}
        group: ${NACOS_GROUP:DEFAULT_GROUP}
        file-extension: yml
        timeout: 3000
        refresh-enabled: true
        shared-configs:
          - data-id: application-web.yml
            group: SHARED_CONFIG
            refresh: false
          - data-id: application-database.yml
            group: SHARED_CONFIG
            refresh: true
          - data-id: application-loadbalancer.yml
            group: SHARED_CONFIG
            refresh: false
          - data-id: application-logger.yml
            group: SHARED_CONFIG
            refresh: false
          - data-id: application-micrometer.yml
            group: SHARED_CONFIG
            refresh: false
          - data-id: application-feign.yml
            group: SHARED_CONFIG
            refresh: false
          - data-id: application-redis.yml
            group: SHARED_CONFIG
            refresh: true
          - data-id: application-sa-token.yml
            group: SHARED_CONFIG
            refresh: true
          - data-id: application-swagger.yml
            group: SHARED_CONFIG
            refresh: false
        extension-configs:
          - data-id: system.yml
            group: ${NACOS_GROUP:DEFAULT_GROUP}
            refresh: true

---
# 本地开发环境（默认）
spring:
  config:
    activate:
      on-profile: local
  cloud:
    nacos:
      server-addr: ${NACOS_HOST:localhost}:${NACOS_PORT:8848}

---
# 集群环境（生产/测试）
spring:
  config:
    activate:
      on-profile: cluster
  cloud:
    nacos:
      server-addr: ${NACOS_CLUSTER_ADDR:192.168.1.25:8848,192.168.1.26:8848,192.168.1.28:8848}

