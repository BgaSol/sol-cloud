networks:
  cloud-app:
    external: true
services:
  cloud-app-nginx:
    image: nginx:alpine
    container_name: cloud-app-nginx
    restart: unless-stopped
    environment:
      TZ: ${TZ}
    ports:
      - "8080:8080"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./output/client:/usr/share/nginx/html:ro
    networks:
      - cloud-app
    depends_on:
      - cloud-server-gateway
  cloud-server-gateway:
    image: amazoncorretto:17.0.15
    working_dir: /app
    command:
      - java
      - -cp
      - spring-boot-loader
      - -Dloader.path=application/BOOT-INF/classes,application/BOOT-INF/lib,dependencies/BOOT-INF/lib
      - -Dloader.main=com.bgasol.gateway.GatewayApplication
      - org.springframework.boot.loader.launch.PropertiesLauncher
    restart: unless-stopped
    volumes:
      - ./output/server/dependencies/gateway-9527:/app/dependencies:ro
      - ./output/server/spring-boot-loader/gateway-9527:/app/spring-boot-loader:ro
      - ./output/server/snapshot-dependencies/gateway-9527:/app/snapshot-dependencies:ro
      - ./output/server/application/gateway-9527:/app/application:ro
    ports:
      - "9527:9527"
    networks:
      - cloud-app
    environment:
      TZ: ${TZ}

      NACOS_HOST: cloud-app-nacos
      NACOS_PORT: 8848
      NACOS_USER: ${NACOS_USER}
      NACOS_PASSWORD: ${NACOS_PASSWORD}

      REDIS_HOST: cloud-app-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}

      SYSTEM_AUTH_ENABLED: ${SYSTEM_AUTH_ENABLED}
  cloud-server-web-system:
    image: amazoncorretto:17.0.15
    working_dir: /app
    command:
      - java
      - -cp
      - spring-boot-loader
      - -Dloader.path=application/BOOT-INF/classes,application/BOOT-INF/lib,dependencies/BOOT-INF/lib
      - -Dloader.main=com.bgasol.web.system.SystemApplication
      - org.springframework.boot.loader.launch.PropertiesLauncher
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - ./output/server/dependencies/web-system-8081:/app/dependencies:ro
      - ./output/server/spring-boot-loader/web-system-8081:/app/spring-boot-loader:ro
      - ./output/server/snapshot-dependencies/web-system-8081:/app/snapshot-dependencies:ro
      - ./output/server/application/web-system-8081:/app/application:ro
    environment:
      TZ: ${TZ}

      SYSTEM_TITLE_NAME: ${SYSTEM_TITLE_NAME}
      SYSTEM_CAPTCHA_MAX: ${SYSTEM_CAPTCHA_MAX}
      SYSTEM_CAPTCHA_LENGTH: ${SYSTEM_CAPTCHA_LENGTH}

      POSTGRES_HOST: cloud-app-postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

      NACOS_HOST: cloud-app-nacos
      NACOS_PORT: 8848
      NACOS_USER: ${NACOS_USER}
      NACOS_PASSWORD: ${NACOS_PASSWORD}

      REDIS_HOST: cloud-app-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}

      ENABLE_SWAGGER: ${ENABLE_SWAGGER}

      SYSTEM_AUTH_ENABLED: ${SYSTEM_AUTH_ENABLED}
    networks:
      - cloud-app
  cloud-server-web-file:
    image: amazoncorretto:17.0.15
    working_dir: /app
    command:
      - java
      - -cp
      - spring-boot-loader
      - -Dloader.path=application/BOOT-INF/classes,application/BOOT-INF/lib,dependencies/BOOT-INF/lib
      - -Dloader.main=com.bgasol.web.file.FileApplication
      - org.springframework.boot.loader.launch.PropertiesLauncher
    restart: unless-stopped
    volumes:
      - ./output/server/dependencies/web-file-8082:/app/dependencies:ro
      - ./output/server/spring-boot-loader/web-file-8082:/app/spring-boot-loader:ro
      - ./output/server/snapshot-dependencies/web-file-8082:/app/snapshot-dependencies:ro
      - ./output/server/application/web-file-8082:/app/application:ro
    ports:
      - "8082:8082"
    environment:
      TZ: ${TZ}

      POSTGRES_HOST: cloud-app-postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

      NACOS_HOST: cloud-app-nacos
      NACOS_PORT: 8848
      NACOS_USER: ${NACOS_USER}
      NACOS_PASSWORD: ${NACOS_PASSWORD}

      REDIS_HOST: cloud-app-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}

      ENABLE_SWAGGER: ${ENABLE_SWAGGER}

      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_HOST: cloud-app-minio
      MINIO_PORT: 9000

      SYSTEM_AUTH_ENABLED: ${SYSTEM_AUTH_ENABLED}
    networks:
      - cloud-app
    depends_on:
      - cloud-server-web-system